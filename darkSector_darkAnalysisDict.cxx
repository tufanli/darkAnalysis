//
// File generated by rootcint at Thu Feb  4 12:23:46 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME darkSector_darkAnalysisDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "darkSector_darkAnalysisDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void darkSectorTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_darkSectorTrack(void *p = 0);
   static void *newArray_darkSectorTrack(Long_t size, void *p);
   static void delete_darkSectorTrack(void *p);
   static void deleteArray_darkSectorTrack(void *p);
   static void destruct_darkSectorTrack(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::darkSectorTrack*)
   {
      ::darkSectorTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::darkSectorTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("darkSectorTrack", ::darkSectorTrack::Class_Version(), "./darkSectorTrack.h", 9,
                  typeid(::darkSectorTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::darkSectorTrack::Dictionary, isa_proxy, 4,
                  sizeof(::darkSectorTrack) );
      instance.SetNew(&new_darkSectorTrack);
      instance.SetNewArray(&newArray_darkSectorTrack);
      instance.SetDelete(&delete_darkSectorTrack);
      instance.SetDeleteArray(&deleteArray_darkSectorTrack);
      instance.SetDestructor(&destruct_darkSectorTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::darkSectorTrack*)
   {
      return GenerateInitInstanceLocal((::darkSectorTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::darkSectorTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void darkSectorEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_darkSectorEvent(void *p = 0);
   static void *newArray_darkSectorEvent(Long_t size, void *p);
   static void delete_darkSectorEvent(void *p);
   static void deleteArray_darkSectorEvent(void *p);
   static void destruct_darkSectorEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::darkSectorEvent*)
   {
      ::darkSectorEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::darkSectorEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("darkSectorEvent", ::darkSectorEvent::Class_Version(), "./darkSectorEvent.h", 12,
                  typeid(::darkSectorEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::darkSectorEvent::Dictionary, isa_proxy, 4,
                  sizeof(::darkSectorEvent) );
      instance.SetNew(&new_darkSectorEvent);
      instance.SetNewArray(&newArray_darkSectorEvent);
      instance.SetDelete(&delete_darkSectorEvent);
      instance.SetDeleteArray(&deleteArray_darkSectorEvent);
      instance.SetDestructor(&destruct_darkSectorEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::darkSectorEvent*)
   {
      return GenerateInitInstanceLocal((::darkSectorEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::darkSectorEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void darkSectorFinalState_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_darkSectorFinalState(void *p = 0);
   static void *newArray_darkSectorFinalState(Long_t size, void *p);
   static void delete_darkSectorFinalState(void *p);
   static void deleteArray_darkSectorFinalState(void *p);
   static void destruct_darkSectorFinalState(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::darkSectorFinalState*)
   {
      ::darkSectorFinalState *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::darkSectorFinalState >(0);
      static ::ROOT::TGenericClassInfo 
         instance("darkSectorFinalState", ::darkSectorFinalState::Class_Version(), "./darkSectorFinalState.h", 8,
                  typeid(::darkSectorFinalState), ::ROOT::DefineBehavior(ptr, ptr),
                  &::darkSectorFinalState::Dictionary, isa_proxy, 4,
                  sizeof(::darkSectorFinalState) );
      instance.SetNew(&new_darkSectorFinalState);
      instance.SetNewArray(&newArray_darkSectorFinalState);
      instance.SetDelete(&delete_darkSectorFinalState);
      instance.SetDeleteArray(&deleteArray_darkSectorFinalState);
      instance.SetDestructor(&destruct_darkSectorFinalState);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::darkSectorFinalState*)
   {
      return GenerateInitInstanceLocal((::darkSectorFinalState*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::darkSectorFinalState*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void darkSectorMeson_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_darkSectorMeson(void *p = 0);
   static void *newArray_darkSectorMeson(Long_t size, void *p);
   static void delete_darkSectorMeson(void *p);
   static void deleteArray_darkSectorMeson(void *p);
   static void destruct_darkSectorMeson(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::darkSectorMeson*)
   {
      ::darkSectorMeson *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::darkSectorMeson >(0);
      static ::ROOT::TGenericClassInfo 
         instance("darkSectorMeson", ::darkSectorMeson::Class_Version(), "./darkSectorMeson.h", 10,
                  typeid(::darkSectorMeson), ::ROOT::DefineBehavior(ptr, ptr),
                  &::darkSectorMeson::Dictionary, isa_proxy, 4,
                  sizeof(::darkSectorMeson) );
      instance.SetNew(&new_darkSectorMeson);
      instance.SetNewArray(&newArray_darkSectorMeson);
      instance.SetDelete(&delete_darkSectorMeson);
      instance.SetDeleteArray(&deleteArray_darkSectorMeson);
      instance.SetDestructor(&destruct_darkSectorMeson);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::darkSectorMeson*)
   {
      return GenerateInitInstanceLocal((::darkSectorMeson*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::darkSectorMeson*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void darkSectorVB_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_darkSectorVB(void *p = 0);
   static void *newArray_darkSectorVB(Long_t size, void *p);
   static void delete_darkSectorVB(void *p);
   static void deleteArray_darkSectorVB(void *p);
   static void destruct_darkSectorVB(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::darkSectorVB*)
   {
      ::darkSectorVB *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::darkSectorVB >(0);
      static ::ROOT::TGenericClassInfo 
         instance("darkSectorVB", ::darkSectorVB::Class_Version(), "./darkSectorVB.h", 13,
                  typeid(::darkSectorVB), ::ROOT::DefineBehavior(ptr, ptr),
                  &::darkSectorVB::Dictionary, isa_proxy, 4,
                  sizeof(::darkSectorVB) );
      instance.SetNew(&new_darkSectorVB);
      instance.SetNewArray(&newArray_darkSectorVB);
      instance.SetDelete(&delete_darkSectorVB);
      instance.SetDeleteArray(&deleteArray_darkSectorVB);
      instance.SetDestructor(&destruct_darkSectorVB);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::darkSectorVB*)
   {
      return GenerateInitInstanceLocal((::darkSectorVB*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::darkSectorVB*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void darkSectorUtilities_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_darkSectorUtilities(void *p = 0);
   static void *newArray_darkSectorUtilities(Long_t size, void *p);
   static void delete_darkSectorUtilities(void *p);
   static void deleteArray_darkSectorUtilities(void *p);
   static void destruct_darkSectorUtilities(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::darkSectorUtilities*)
   {
      ::darkSectorUtilities *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::darkSectorUtilities >(0);
      static ::ROOT::TGenericClassInfo 
         instance("darkSectorUtilities", ::darkSectorUtilities::Class_Version(), "./darkSectorUtilities.h", 16,
                  typeid(::darkSectorUtilities), ::ROOT::DefineBehavior(ptr, ptr),
                  &::darkSectorUtilities::Dictionary, isa_proxy, 4,
                  sizeof(::darkSectorUtilities) );
      instance.SetNew(&new_darkSectorUtilities);
      instance.SetNewArray(&newArray_darkSectorUtilities);
      instance.SetDelete(&delete_darkSectorUtilities);
      instance.SetDeleteArray(&deleteArray_darkSectorUtilities);
      instance.SetDestructor(&destruct_darkSectorUtilities);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::darkSectorUtilities*)
   {
      return GenerateInitInstanceLocal((::darkSectorUtilities*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::darkSectorUtilities*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr darkSectorTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *darkSectorTrack::Class_Name()
{
   return "darkSectorTrack";
}

//______________________________________________________________________________
const char *darkSectorTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int darkSectorTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void darkSectorTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *darkSectorTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorTrack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr darkSectorEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *darkSectorEvent::Class_Name()
{
   return "darkSectorEvent";
}

//______________________________________________________________________________
const char *darkSectorEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int darkSectorEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void darkSectorEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *darkSectorEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr darkSectorFinalState::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *darkSectorFinalState::Class_Name()
{
   return "darkSectorFinalState";
}

//______________________________________________________________________________
const char *darkSectorFinalState::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorFinalState*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int darkSectorFinalState::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorFinalState*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void darkSectorFinalState::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorFinalState*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *darkSectorFinalState::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorFinalState*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr darkSectorMeson::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *darkSectorMeson::Class_Name()
{
   return "darkSectorMeson";
}

//______________________________________________________________________________
const char *darkSectorMeson::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorMeson*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int darkSectorMeson::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorMeson*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void darkSectorMeson::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorMeson*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *darkSectorMeson::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorMeson*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr darkSectorVB::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *darkSectorVB::Class_Name()
{
   return "darkSectorVB";
}

//______________________________________________________________________________
const char *darkSectorVB::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorVB*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int darkSectorVB::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorVB*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void darkSectorVB::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorVB*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *darkSectorVB::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorVB*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr darkSectorUtilities::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *darkSectorUtilities::Class_Name()
{
   return "darkSectorUtilities";
}

//______________________________________________________________________________
const char *darkSectorUtilities::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorUtilities*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int darkSectorUtilities::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorUtilities*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void darkSectorUtilities::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorUtilities*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *darkSectorUtilities::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::darkSectorUtilities*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void darkSectorTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class darkSectorTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(darkSectorTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(darkSectorTrack::Class(),this);
   }
}

//______________________________________________________________________________
void darkSectorTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class darkSectorTrack.
      TClass *R__cl = ::darkSectorTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trEventId", &m_trEventId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trEventFileId", &m_trEventFileId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trId", &m_trId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trPDG", &m_trPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trPx", &m_trPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trPy", &m_trPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trPz", &m_trPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trPt", &m_trPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trMomentum", &m_trMomentum);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_darkSectorTrack(void *p) {
      return  p ? new(p) ::darkSectorTrack : new ::darkSectorTrack;
   }
   static void *newArray_darkSectorTrack(Long_t nElements, void *p) {
      return p ? new(p) ::darkSectorTrack[nElements] : new ::darkSectorTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_darkSectorTrack(void *p) {
      delete ((::darkSectorTrack*)p);
   }
   static void deleteArray_darkSectorTrack(void *p) {
      delete [] ((::darkSectorTrack*)p);
   }
   static void destruct_darkSectorTrack(void *p) {
      typedef ::darkSectorTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::darkSectorTrack

//______________________________________________________________________________
void darkSectorEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class darkSectorEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(darkSectorEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(darkSectorEvent::Class(),this);
   }
}

//______________________________________________________________________________
void darkSectorEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class darkSectorEvent.
      TClass *R__cl = ::darkSectorEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_evId", &m_evId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_evFileNumber", &m_evFileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_evMultiplicity", &m_evMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_evTracks", &m_evTracks);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_darkSectorEvent(void *p) {
      return  p ? new(p) ::darkSectorEvent : new ::darkSectorEvent;
   }
   static void *newArray_darkSectorEvent(Long_t nElements, void *p) {
      return p ? new(p) ::darkSectorEvent[nElements] : new ::darkSectorEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_darkSectorEvent(void *p) {
      delete ((::darkSectorEvent*)p);
   }
   static void deleteArray_darkSectorEvent(void *p) {
      delete [] ((::darkSectorEvent*)p);
   }
   static void destruct_darkSectorEvent(void *p) {
      typedef ::darkSectorEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::darkSectorEvent

//______________________________________________________________________________
void darkSectorUtilities::Streamer(TBuffer &R__b)
{
   // Stream an object of class darkSectorUtilities.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(darkSectorUtilities::Class(),this);
   } else {
      R__b.WriteClassBuffer(darkSectorUtilities::Class(),this);
   }
}

//______________________________________________________________________________
void darkSectorUtilities::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class darkSectorUtilities.
      TClass *R__cl = ::darkSectorUtilities::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_darkSectorUtilities(void *p) {
      return  p ? new(p) ::darkSectorUtilities : new ::darkSectorUtilities;
   }
   static void *newArray_darkSectorUtilities(Long_t nElements, void *p) {
      return p ? new(p) ::darkSectorUtilities[nElements] : new ::darkSectorUtilities[nElements];
   }
   // Wrapper around operator delete
   static void delete_darkSectorUtilities(void *p) {
      delete ((::darkSectorUtilities*)p);
   }
   static void deleteArray_darkSectorUtilities(void *p) {
      delete [] ((::darkSectorUtilities*)p);
   }
   static void destruct_darkSectorUtilities(void *p) {
      typedef ::darkSectorUtilities current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::darkSectorUtilities

//______________________________________________________________________________
void darkSectorMeson::Streamer(TBuffer &R__b)
{
   // Stream an object of class darkSectorMeson.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(darkSectorMeson::Class(),this);
   } else {
      R__b.WriteClassBuffer(darkSectorMeson::Class(),this);
   }
}

//______________________________________________________________________________
void darkSectorMeson::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class darkSectorMeson.
      TClass *R__cl = ::darkSectorMeson::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trEnergy", &m_trEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trMass", &m_trMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trInvMass", &m_trInvMass);
      darkSectorTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_darkSectorMeson(void *p) {
      return  p ? new(p) ::darkSectorMeson : new ::darkSectorMeson;
   }
   static void *newArray_darkSectorMeson(Long_t nElements, void *p) {
      return p ? new(p) ::darkSectorMeson[nElements] : new ::darkSectorMeson[nElements];
   }
   // Wrapper around operator delete
   static void delete_darkSectorMeson(void *p) {
      delete ((::darkSectorMeson*)p);
   }
   static void deleteArray_darkSectorMeson(void *p) {
      delete [] ((::darkSectorMeson*)p);
   }
   static void destruct_darkSectorMeson(void *p) {
      typedef ::darkSectorMeson current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::darkSectorMeson

//______________________________________________________________________________
void darkSectorVB::Streamer(TBuffer &R__b)
{
   // Stream an object of class darkSectorVB.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(darkSectorVB::Class(),this);
   } else {
      R__b.WriteClassBuffer(darkSectorVB::Class(),this);
   }
}

//______________________________________________________________________________
void darkSectorVB::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class darkSectorVB.
      TClass *R__cl = ::darkSectorVB::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_vbInvMass", &m_vbInvMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_vbInterceptSBND", &m_vbInterceptSBND);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_vbInterceptUBOONE", &m_vbInterceptUBOONE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_vbInterceptICARUS", &m_vbInterceptICARUS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_vbTracks_vec", (void*)&m_vbTracks_vec);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&m_vbTracks_vec, "m_vbTracks_vec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_photonTracks_vec", (void*)&m_photonTracks_vec);
      R__insp.InspectMember("vector<TLorentzVector>", (void*)&m_photonTracks_vec, "m_photonTracks_vec.", false);
      darkSectorTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_darkSectorVB(void *p) {
      return  p ? new(p) ::darkSectorVB : new ::darkSectorVB;
   }
   static void *newArray_darkSectorVB(Long_t nElements, void *p) {
      return p ? new(p) ::darkSectorVB[nElements] : new ::darkSectorVB[nElements];
   }
   // Wrapper around operator delete
   static void delete_darkSectorVB(void *p) {
      delete ((::darkSectorVB*)p);
   }
   static void deleteArray_darkSectorVB(void *p) {
      delete [] ((::darkSectorVB*)p);
   }
   static void destruct_darkSectorVB(void *p) {
      typedef ::darkSectorVB current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::darkSectorVB

//______________________________________________________________________________
void darkSectorFinalState::Streamer(TBuffer &R__b)
{
   // Stream an object of class darkSectorFinalState.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(darkSectorFinalState::Class(),this);
   } else {
      R__b.WriteClassBuffer(darkSectorFinalState::Class(),this);
   }
}

//______________________________________________________________________________
void darkSectorFinalState::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class darkSectorFinalState.
      TClass *R__cl = ::darkSectorFinalState::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trEnergy", &m_trEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_trInvMass", &m_trInvMass);
      darkSectorTrack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_darkSectorFinalState(void *p) {
      return  p ? new(p) ::darkSectorFinalState : new ::darkSectorFinalState;
   }
   static void *newArray_darkSectorFinalState(Long_t nElements, void *p) {
      return p ? new(p) ::darkSectorFinalState[nElements] : new ::darkSectorFinalState[nElements];
   }
   // Wrapper around operator delete
   static void delete_darkSectorFinalState(void *p) {
      delete ((::darkSectorFinalState*)p);
   }
   static void deleteArray_darkSectorFinalState(void *p) {
      delete [] ((::darkSectorFinalState*)p);
   }
   static void destruct_darkSectorFinalState(void *p) {
      typedef ::darkSectorFinalState current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::darkSectorFinalState

namespace ROOTDict {
   void vectorlETLorentzVectorgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETLorentzVectorgR_Dictionary();
   static void *new_vectorlETLorentzVectorgR(void *p = 0);
   static void *newArray_vectorlETLorentzVectorgR(Long_t size, void *p);
   static void delete_vectorlETLorentzVectorgR(void *p);
   static void deleteArray_vectorlETLorentzVectorgR(void *p);
   static void destruct_vectorlETLorentzVectorgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TLorentzVector>*)
   {
      vector<TLorentzVector> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TLorentzVector>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TLorentzVector>", -2, "prec_stl/vector", 49,
                  typeid(vector<TLorentzVector>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETLorentzVectorgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TLorentzVector>) );
      instance.SetNew(&new_vectorlETLorentzVectorgR);
      instance.SetNewArray(&newArray_vectorlETLorentzVectorgR);
      instance.SetDelete(&delete_vectorlETLorentzVectorgR);
      instance.SetDeleteArray(&deleteArray_vectorlETLorentzVectorgR);
      instance.SetDestructor(&destruct_vectorlETLorentzVectorgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TLorentzVector> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETLorentzVectorgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TLorentzVector>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETLorentzVectorgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector> : new vector<TLorentzVector>;
   }
   static void *newArray_vectorlETLorentzVectorgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TLorentzVector>[nElements] : new vector<TLorentzVector>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETLorentzVectorgR(void *p) {
      delete ((vector<TLorentzVector>*)p);
   }
   static void deleteArray_vectorlETLorentzVectorgR(void *p) {
      delete [] ((vector<TLorentzVector>*)p);
   }
   static void destruct_vectorlETLorentzVectorgR(void *p) {
      typedef vector<TLorentzVector> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TLorentzVector>

/********************************************************
* darkSector_darkAnalysisDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabledarkSector_darkAnalysisDict();

extern "C" void G__set_cpp_environmentdarkSector_darkAnalysisDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("darkSectorEvent.h");
  G__add_compiledheader("darkSectorFinalState.h");
  G__add_compiledheader("darkSectorMeson.h");
  G__add_compiledheader("darkSectorTrack.h");
  G__add_compiledheader("darkSectorUtilities.h");
  G__add_compiledheader("darkSectorVB.h");
  G__cpp_reset_tagtabledarkSector_darkAnalysisDict();
}
#include <new>
extern "C" int G__cpp_dllrevdarkSector_darkAnalysisDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* darkSectorTrack */
static int G__darkSector_darkAnalysisDict_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorTrack[n];
     } else {
       p = new((void*) gvp) darkSectorTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorTrack;
     } else {
       p = new((void*) gvp) darkSectorTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new darkSectorTrack(*(darkSectorTrack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) darkSectorTrack(*(darkSectorTrack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackEventId((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackEventFileId((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackPDG((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackPx((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackPy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackPz((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackPt((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->setTrackMomentum((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((darkSectorTrack*) G__getstructoffset())->getTrackEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((darkSectorTrack*) G__getstructoffset())->getTrackEventFileId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((darkSectorTrack*) G__getstructoffset())->getTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((darkSectorTrack*) G__getstructoffset())->getTrackPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorTrack*) G__getstructoffset())->getTrackPx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorTrack*) G__getstructoffset())->getTrackPy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorTrack*) G__getstructoffset())->getTrackPz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorTrack*) G__getstructoffset())->getTrackPt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorTrack*) G__getstructoffset())->getTrackMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) darkSectorTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) darkSectorTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_194_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef darkSectorTrack G__TdarkSectorTrack;
static int G__darkSector_darkAnalysisDict_194_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (darkSectorTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((darkSectorTrack*) (soff+(sizeof(darkSectorTrack)*i)))->~G__TdarkSectorTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (darkSectorTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((darkSectorTrack*) (soff))->~G__TdarkSectorTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__darkSector_darkAnalysisDict_194_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorTrack* dest = (darkSectorTrack*) G__getstructoffset();
   *dest = *(darkSectorTrack*) libp->para[0].ref;
   const darkSectorTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* darkSectorEvent */
static int G__darkSector_darkAnalysisDict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorEvent[n];
     } else {
       p = new((void*) gvp) darkSectorEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorEvent;
     } else {
       p = new((void*) gvp) darkSectorEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new darkSectorEvent(*(darkSectorEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) darkSectorEvent(*(darkSectorEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorEvent*) G__getstructoffset())->setEventId((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorEvent*) G__getstructoffset())->setEventFileNumber((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorEvent*) G__getstructoffset())->setEventMultiplicity((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((darkSectorEvent*) G__getstructoffset())->getEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((darkSectorEvent*) G__getstructoffset())->getEventFileNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((darkSectorEvent*) G__getstructoffset())->getEventMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((darkSectorEvent*) G__getstructoffset())->eventTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorEvent*) G__getstructoffset())->addTrackToEvent((darkSectorTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((darkSectorEvent*) G__getstructoffset())->getTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) darkSectorEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) darkSectorEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_195_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef darkSectorEvent G__TdarkSectorEvent;
static int G__darkSector_darkAnalysisDict_195_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (darkSectorEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((darkSectorEvent*) (soff+(sizeof(darkSectorEvent)*i)))->~G__TdarkSectorEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (darkSectorEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((darkSectorEvent*) (soff))->~G__TdarkSectorEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__darkSector_darkAnalysisDict_195_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorEvent* dest = (darkSectorEvent*) G__getstructoffset();
   *dest = *(darkSectorEvent*) libp->para[0].ref;
   const darkSectorEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* darkSectorFinalState */
static int G__darkSector_darkAnalysisDict_196_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorFinalState* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new darkSectorFinalState(*(darkSectorFinalState*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) darkSectorFinalState(*(darkSectorFinalState*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorFinalState* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorFinalState[n];
     } else {
       p = new((void*) gvp) darkSectorFinalState[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorFinalState;
     } else {
       p = new((void*) gvp) darkSectorFinalState;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorFinalState*) G__getstructoffset())->setFSPEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorFinalState*) G__getstructoffset())->setFSPInvMass((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorFinalState*) G__getstructoffset())->getFSPEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorFinalState*) G__getstructoffset())->getFSPInvMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) darkSectorFinalState::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorFinalState::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) darkSectorFinalState::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorFinalState::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorFinalState*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorFinalState::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorFinalState::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorFinalState::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_196_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorFinalState::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef darkSectorFinalState G__TdarkSectorFinalState;
static int G__darkSector_darkAnalysisDict_196_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (darkSectorFinalState*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((darkSectorFinalState*) (soff+(sizeof(darkSectorFinalState)*i)))->~G__TdarkSectorFinalState();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (darkSectorFinalState*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((darkSectorFinalState*) (soff))->~G__TdarkSectorFinalState();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__darkSector_darkAnalysisDict_196_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorFinalState* dest = (darkSectorFinalState*) G__getstructoffset();
   *dest = *(darkSectorFinalState*) libp->para[0].ref;
   const darkSectorFinalState& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* darkSectorMeson */
static int G__darkSector_darkAnalysisDict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorMeson* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorMeson[n];
     } else {
       p = new((void*) gvp) darkSectorMeson[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorMeson;
     } else {
       p = new((void*) gvp) darkSectorMeson;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorMeson* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new darkSectorMeson(*(darkSectorMeson*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) darkSectorMeson(*(darkSectorMeson*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorMeson*) G__getstructoffset())->setMesonEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorMeson*) G__getstructoffset())->setMesonMass((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorMeson*) G__getstructoffset())->setMesonInvMass((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorMeson*) G__getstructoffset())->getMesonEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorMeson*) G__getstructoffset())->getMesonMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorMeson*) G__getstructoffset())->getMesonInvMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) darkSectorMeson::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorMeson::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) darkSectorMeson::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorMeson::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorMeson*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorMeson::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorMeson::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorMeson::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorMeson::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef darkSectorMeson G__TdarkSectorMeson;
static int G__darkSector_darkAnalysisDict_197_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (darkSectorMeson*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((darkSectorMeson*) (soff+(sizeof(darkSectorMeson)*i)))->~G__TdarkSectorMeson();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (darkSectorMeson*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((darkSectorMeson*) (soff))->~G__TdarkSectorMeson();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__darkSector_darkAnalysisDict_197_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorMeson* dest = (darkSectorMeson*) G__getstructoffset();
   *dest = *(darkSectorMeson*) libp->para[0].ref;
   const darkSectorMeson& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* darkSectorVB */
static int G__darkSector_darkAnalysisDict_537_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorVB* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorVB[n];
     } else {
       p = new((void*) gvp) darkSectorVB[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorVB;
     } else {
       p = new((void*) gvp) darkSectorVB;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorVB* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new darkSectorVB(*(darkSectorVB*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) darkSectorVB(*(darkSectorVB*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->setInvMass((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->setMediatorInterceptSBND((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->setMediatorInterceptUBOONE((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->setMediatorInterceptICARUS((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((darkSectorVB*) G__getstructoffset())->getInvMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((darkSectorVB*) G__getstructoffset())->getMediatorInterceptSBND());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((darkSectorVB*) G__getstructoffset())->getMediatorInterceptUBOONE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((darkSectorVB*) G__getstructoffset())->getMediatorInterceptICARUS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector>* pobj;
         vector<TLorentzVector> xobj = ((darkSectorVB*) G__getstructoffset())->vectorBosonsVec();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TLorentzVector>* pobj;
         vector<TLorentzVector> xobj = ((darkSectorVB*) G__getstructoffset())->initialPhotonsVec();
         pobj = new vector<TLorentzVector>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->addVBVec(*((const TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->addPhotonVec(*((const TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) darkSectorVB::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorVB::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) darkSectorVB::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorVB::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorVB*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorVB::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorVB::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorVB::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_537_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorVB::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef darkSectorVB G__TdarkSectorVB;
static int G__darkSector_darkAnalysisDict_537_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (darkSectorVB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((darkSectorVB*) (soff+(sizeof(darkSectorVB)*i)))->~G__TdarkSectorVB();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (darkSectorVB*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((darkSectorVB*) (soff))->~G__TdarkSectorVB();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__darkSector_darkAnalysisDict_537_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorVB* dest = (darkSectorVB*) G__getstructoffset();
   *dest = *(darkSectorVB*) libp->para[0].ref;
   const darkSectorVB& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* darkSectorUtilities */
static int G__darkSector_darkAnalysisDict_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorUtilities* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorUtilities[n];
     } else {
       p = new((void*) gvp) darkSectorUtilities[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new darkSectorUtilities;
     } else {
       p = new((void*) gvp) darkSectorUtilities;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorUtilities* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new darkSectorUtilities(*(darkSectorUtilities*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) darkSectorUtilities(*(darkSectorUtilities*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createSingleFluxFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createFluxFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createSinglePiFluxFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createPi0File((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createMesonFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createFluxFromMesonFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createMediatorFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::createDecayFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorUtilities*) G__getstructoffset())->printEventInfo((darkSectorEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorUtilities*) G__getstructoffset())->printTrackInfo((darkSectorTrack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) darkSectorUtilities::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorUtilities::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) darkSectorUtilities::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      darkSectorUtilities::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((darkSectorUtilities*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorUtilities::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorUtilities::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) darkSectorUtilities::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__darkSector_darkAnalysisDict_538_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) darkSectorUtilities::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef darkSectorUtilities G__TdarkSectorUtilities;
static int G__darkSector_darkAnalysisDict_538_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (darkSectorUtilities*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((darkSectorUtilities*) (soff+(sizeof(darkSectorUtilities)*i)))->~G__TdarkSectorUtilities();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (darkSectorUtilities*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((darkSectorUtilities*) (soff))->~G__TdarkSectorUtilities();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__darkSector_darkAnalysisDict_538_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   darkSectorUtilities* dest = (darkSectorUtilities*) G__getstructoffset();
   *dest = *(darkSectorUtilities*) libp->para[0].ref;
   const darkSectorUtilities& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* darkSectorTrack */

/* darkSectorEvent */

/* darkSectorFinalState */

/* darkSectorMeson */

/* darkSectorVB */

/* darkSectorUtilities */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncdarkSector_darkAnalysisDict {
 public:
  G__Sizep2memfuncdarkSector_darkAnalysisDict(): p(&G__Sizep2memfuncdarkSector_darkAnalysisDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncdarkSector_darkAnalysisDict::*p)();
};

size_t G__get_sizep2memfuncdarkSector_darkAnalysisDict()
{
  G__Sizep2memfuncdarkSector_darkAnalysisDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancedarkSector_darkAnalysisDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack))) {
     darkSectorTrack *G__Lderived;
     G__Lderived=(darkSectorTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent))) {
     darkSectorEvent *G__Lderived;
     G__Lderived=(darkSectorEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState))) {
     darkSectorFinalState *G__Lderived;
     G__Lderived=(darkSectorFinalState*)0x1000;
     {
       darkSectorTrack *G__Lpbase=(darkSectorTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson))) {
     darkSectorMeson *G__Lderived;
     G__Lderived=(darkSectorMeson*)0x1000;
     {
       darkSectorTrack *G__Lpbase=(darkSectorTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB))) {
     darkSectorVB *G__Lderived;
     G__Lderived=(darkSectorVB*)0x1000;
     {
       darkSectorTrack *G__Lpbase=(darkSectorTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities))) {
     darkSectorUtilities *G__Lderived;
     G__Lderived=(darkSectorUtilities*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities),G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabledarkSector_darkAnalysisDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TLorentzVector>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* darkSectorTrack */
static void G__setup_memvardarkSectorTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack));
   { darkSectorTrack *p; p=(darkSectorTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"m_trEventId=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"m_trEventFileId=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"m_trId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m_trPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trPz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trPt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* darkSectorEvent */
static void G__setup_memvardarkSectorEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent));
   { darkSectorEvent *p; p=(darkSectorEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"m_evId=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"m_evFileNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m_evMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObjArray),-1,-1,2,"m_evTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* darkSectorFinalState */
static void G__setup_memvardarkSectorFinalState(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState));
   { darkSectorFinalState *p; p=(darkSectorFinalState*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trInvMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* darkSectorMeson */
static void G__setup_memvardarkSectorMeson(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson));
   { darkSectorMeson *p; p=(darkSectorMeson*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_trInvMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* darkSectorVB */
static void G__setup_memvardarkSectorVB(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB));
   { darkSectorVB *p; p=(darkSectorVB*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"m_vbInvMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m_vbInterceptSBND=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m_vbInterceptUBOONE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"m_vbInterceptICARUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"m_vbTracks_vec=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR),G__defined_typename("vector<TLorentzVector>"),-1,2,"m_photonTracks_vec=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* darkSectorUtilities */
static void G__setup_memvardarkSectorUtilities(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities));
   { darkSectorUtilities *p; p=(darkSectorUtilities*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvardarkSector_darkAnalysisDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdarkSectorTrack(void) {
   /* darkSectorTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack));
   G__memfunc_setup("darkSectorTrack",1543,G__darkSector_darkAnalysisDict_194_0_1, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("darkSectorTrack",1543,G__darkSector_darkAnalysisDict_194_0_2, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack), -1, 0, 1, 1, 1, 0, "u 'darkSectorTrack' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackEventId",1520,G__darkSector_darkAnalysisDict_194_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackEventFileId",1904,G__darkSector_darkAnalysisDict_194_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackId",1006,G__darkSector_darkAnalysisDict_194_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPDG",1052,G__darkSector_darkAnalysisDict_194_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPx",1033,G__darkSector_darkAnalysisDict_194_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Px", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPy",1034,G__darkSector_darkAnalysisDict_194_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPz",1035,G__darkSector_darkAnalysisDict_194_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackPt",1029,G__darkSector_darkAnalysisDict_194_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackMomentum",1683,G__darkSector_darkAnalysisDict_194_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackEventId",1508,G__darkSector_darkAnalysisDict_194_0_12, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackEventFileId",1892,G__darkSector_darkAnalysisDict_194_0_13, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackId",994,G__darkSector_darkAnalysisDict_194_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPDG",1040,G__darkSector_darkAnalysisDict_194_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPx",1021,G__darkSector_darkAnalysisDict_194_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPy",1022,G__darkSector_darkAnalysisDict_194_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPz",1023,G__darkSector_darkAnalysisDict_194_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackPt",1017,G__darkSector_darkAnalysisDict_194_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackMomentum",1671,G__darkSector_darkAnalysisDict_194_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__darkSector_darkAnalysisDict_194_0_21, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&darkSectorTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__darkSector_darkAnalysisDict_194_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__darkSector_darkAnalysisDict_194_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&darkSectorTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__darkSector_darkAnalysisDict_194_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&darkSectorTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__darkSector_darkAnalysisDict_194_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__darkSector_darkAnalysisDict_194_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__darkSector_darkAnalysisDict_194_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__darkSector_darkAnalysisDict_194_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__darkSector_darkAnalysisDict_194_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorTrack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~darkSectorTrack", 1669, G__darkSector_darkAnalysisDict_194_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__darkSector_darkAnalysisDict_194_0_34, (int) ('u'), G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack), -1, 1, 1, 1, 1, 0, "u 'darkSectorTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdarkSectorEvent(void) {
   /* darkSectorEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent));
   G__memfunc_setup("darkSectorEvent",1556,G__darkSector_darkAnalysisDict_195_0_1, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("darkSectorEvent",1556,G__darkSector_darkAnalysisDict_195_0_2, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent), -1, 0, 1, 1, 1, 0, "u 'darkSectorEvent' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventId",1019,G__darkSector_darkAnalysisDict_195_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventFileNumber",1847,G__darkSector_darkAnalysisDict_195_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventMultiplicity",2135,G__darkSector_darkAnalysisDict_195_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - multiplicity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventId",1007,G__darkSector_darkAnalysisDict_195_0_6, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventFileNumber",1835,G__darkSector_darkAnalysisDict_195_0_7, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventMultiplicity",2123,G__darkSector_darkAnalysisDict_195_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventTracks",1162,G__darkSector_darkAnalysisDict_195_0_9, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", "all tracks", (void*) NULL, 0);
   G__memfunc_setup("addTrackToEvent",1507,G__darkSector_darkAnalysisDict_195_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'darkSectorTrack' - 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__darkSector_darkAnalysisDict_195_0_11, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorTrack), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", "track at i", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__darkSector_darkAnalysisDict_195_0_12, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&darkSectorEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__darkSector_darkAnalysisDict_195_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__darkSector_darkAnalysisDict_195_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&darkSectorEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__darkSector_darkAnalysisDict_195_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&darkSectorEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__darkSector_darkAnalysisDict_195_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__darkSector_darkAnalysisDict_195_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__darkSector_darkAnalysisDict_195_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__darkSector_darkAnalysisDict_195_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__darkSector_darkAnalysisDict_195_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~darkSectorEvent", 1682, G__darkSector_darkAnalysisDict_195_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__darkSector_darkAnalysisDict_195_0_25, (int) ('u'), G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorEvent), -1, 1, 1, 1, 1, 0, "u 'darkSectorEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdarkSectorFinalState(void) {
   /* darkSectorFinalState */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState));
   G__memfunc_setup("darkSectorFinalState",2045,G__darkSector_darkAnalysisDict_196_0_1, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState), -1, 0, 1, 1, 1, 0, "u 'darkSectorFinalState' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("darkSectorFinalState",2045,G__darkSector_darkAnalysisDict_196_0_2, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFSPEnergy",1183,G__darkSector_darkAnalysisDict_196_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFSPInvMass",1270,G__darkSector_darkAnalysisDict_196_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - massIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFSPEnergy",1171,G__darkSector_darkAnalysisDict_196_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFSPInvMass",1258,G__darkSector_darkAnalysisDict_196_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__darkSector_darkAnalysisDict_196_0_7, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&darkSectorFinalState::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__darkSector_darkAnalysisDict_196_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorFinalState::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__darkSector_darkAnalysisDict_196_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&darkSectorFinalState::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__darkSector_darkAnalysisDict_196_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&darkSectorFinalState::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__darkSector_darkAnalysisDict_196_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__darkSector_darkAnalysisDict_196_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorFinalState::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__darkSector_darkAnalysisDict_196_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorFinalState::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__darkSector_darkAnalysisDict_196_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorFinalState::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__darkSector_darkAnalysisDict_196_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorFinalState::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~darkSectorFinalState", 2171, G__darkSector_darkAnalysisDict_196_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__darkSector_darkAnalysisDict_196_0_20, (int) ('u'), G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState), -1, 1, 1, 1, 1, 0, "u 'darkSectorFinalState' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdarkSectorMeson(void) {
   /* darkSectorMeson */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson));
   G__memfunc_setup("darkSectorMeson",1556,G__darkSector_darkAnalysisDict_197_0_1, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("darkSectorMeson",1556,G__darkSector_darkAnalysisDict_197_0_2, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson), -1, 0, 1, 1, 1, 0, "u 'darkSectorMeson' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMesonEnergy",1464,G__darkSector_darkAnalysisDict_197_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - en", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMesonMass",1250,G__darkSector_darkAnalysisDict_197_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMesonInvMass",1551,G__darkSector_darkAnalysisDict_197_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - massIn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMesonEnergy",1452,G__darkSector_darkAnalysisDict_197_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMesonMass",1238,G__darkSector_darkAnalysisDict_197_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMesonInvMass",1539,G__darkSector_darkAnalysisDict_197_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__darkSector_darkAnalysisDict_197_0_9, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&darkSectorMeson::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__darkSector_darkAnalysisDict_197_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorMeson::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__darkSector_darkAnalysisDict_197_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&darkSectorMeson::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__darkSector_darkAnalysisDict_197_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&darkSectorMeson::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__darkSector_darkAnalysisDict_197_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__darkSector_darkAnalysisDict_197_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorMeson::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__darkSector_darkAnalysisDict_197_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorMeson::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__darkSector_darkAnalysisDict_197_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorMeson::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__darkSector_darkAnalysisDict_197_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorMeson::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~darkSectorMeson", 1682, G__darkSector_darkAnalysisDict_197_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__darkSector_darkAnalysisDict_197_0_22, (int) ('u'), G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorMeson), -1, 1, 1, 1, 1, 0, "u 'darkSectorMeson' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdarkSectorVB(void) {
   /* darkSectorVB */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB));
   G__memfunc_setup("darkSectorVB",1194,G__darkSector_darkAnalysisDict_537_0_1, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("darkSectorVB",1194,G__darkSector_darkAnalysisDict_537_0_2, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB), -1, 0, 1, 1, 1, 0, "u 'darkSectorVB' - 11 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInvMass",1037,G__darkSector_darkAnalysisDict_537_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - invmass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMediatorInterceptSBND",2390,G__darkSector_darkAnalysisDict_537_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - inter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMediatorInterceptUBOONE",2551,G__darkSector_darkAnalysisDict_537_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - inter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMediatorInterceptICARUS",2550,G__darkSector_darkAnalysisDict_537_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - inter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInvMass",1025,G__darkSector_darkAnalysisDict_537_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMediatorInterceptSBND",2378,G__darkSector_darkAnalysisDict_537_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMediatorInterceptUBOONE",2539,G__darkSector_darkAnalysisDict_537_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMediatorInterceptICARUS",2538,G__darkSector_darkAnalysisDict_537_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vectorBosonsVec",1573,G__darkSector_darkAnalysisDict_537_0_11, 117, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialPhotonsVec",1779,G__darkSector_darkAnalysisDict_537_0_12, 117, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR), G__defined_typename("vector<TLorentzVector>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addVBVec",735,G__darkSector_darkAnalysisDict_537_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 10 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPhotonVec",1215,G__darkSector_darkAnalysisDict_537_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 10 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__darkSector_darkAnalysisDict_537_0_15, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&darkSectorVB::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__darkSector_darkAnalysisDict_537_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorVB::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__darkSector_darkAnalysisDict_537_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&darkSectorVB::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__darkSector_darkAnalysisDict_537_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&darkSectorVB::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__darkSector_darkAnalysisDict_537_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__darkSector_darkAnalysisDict_537_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorVB::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__darkSector_darkAnalysisDict_537_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorVB::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__darkSector_darkAnalysisDict_537_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorVB::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__darkSector_darkAnalysisDict_537_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorVB::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~darkSectorVB", 1320, G__darkSector_darkAnalysisDict_537_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__darkSector_darkAnalysisDict_537_0_28, (int) ('u'), G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorVB), -1, 1, 1, 1, 1, 0, "u 'darkSectorVB' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdarkSectorUtilities(void) {
   /* darkSectorUtilities */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities));
   G__memfunc_setup("darkSectorUtilities",1998,G__darkSector_darkAnalysisDict_538_0_1, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("darkSectorUtilities",1998,G__darkSector_darkAnalysisDict_538_0_2, 105, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities), -1, 0, 1, 1, 1, 0, "u 'darkSectorUtilities' - 11 - util", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createSingleFluxFile",2037,G__darkSector_darkAnalysisDict_538_0_3, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootFileName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*))(&darkSectorUtilities::createSingleFluxFile) ), 0);
   G__memfunc_setup("createFluxFile",1427,G__darkSector_darkAnalysisDict_538_0_4, 121, -1, -1, 0, 4, 3, 1, 0, 
"C - - 10 - dirName C - - 10 - ext "
"C - - 10 - treeName C - - 10 - outputRootFileName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*, const char*))(&darkSectorUtilities::createFluxFile) ), 0);
   G__memfunc_setup("createSinglePiFluxFile",2222,G__darkSector_darkAnalysisDict_538_0_5, 121, -1, -1, 0, 4, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootFileName i - 'Int_t' 0 - pdg", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*, Int_t))(&darkSectorUtilities::createSinglePiFluxFile) ), 0);
   G__memfunc_setup("createPi0File",1245,G__darkSector_darkAnalysisDict_538_0_6, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootFileName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*))(&darkSectorUtilities::createPi0File) ), 0);
   G__memfunc_setup("createMesonFile",1526,G__darkSector_darkAnalysisDict_538_0_7, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootFileName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*))(&darkSectorUtilities::createMesonFile) ), 0);
   G__memfunc_setup("createFluxFromMesonFile",2345,G__darkSector_darkAnalysisDict_538_0_8, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*))(&darkSectorUtilities::createFluxFromMesonFile) ), 0);
   G__memfunc_setup("createMediatorFile",1833,G__darkSector_darkAnalysisDict_538_0_9, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootFileName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*))(&darkSectorUtilities::createMediatorFile) ), 0);
   G__memfunc_setup("createDecayFile",1498,G__darkSector_darkAnalysisDict_538_0_10, 121, -1, -1, 0, 3, 3, 1, 0, 
"C - - 10 - inputRootFileName C - - 10 - treeName "
"C - - 10 - outputRootFileName", (char*)NULL, (void*) G__func2void( (void (*)(const char*, const char*, const char*))(&darkSectorUtilities::createDecayFile) ), 0);
   G__memfunc_setup("printEventInfo",1467,G__darkSector_darkAnalysisDict_538_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'darkSectorEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printTrackInfo",1454,G__darkSector_darkAnalysisDict_538_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'darkSectorTrack' - 0 - tr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__darkSector_darkAnalysisDict_538_0_13, 85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&darkSectorUtilities::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__darkSector_darkAnalysisDict_538_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorUtilities::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__darkSector_darkAnalysisDict_538_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&darkSectorUtilities::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__darkSector_darkAnalysisDict_538_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&darkSectorUtilities::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__darkSector_darkAnalysisDict_538_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__darkSector_darkAnalysisDict_538_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorUtilities::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__darkSector_darkAnalysisDict_538_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorUtilities::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__darkSector_darkAnalysisDict_538_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&darkSectorUtilities::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__darkSector_darkAnalysisDict_538_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&darkSectorUtilities::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~darkSectorUtilities", 2124, G__darkSector_darkAnalysisDict_538_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__darkSector_darkAnalysisDict_538_0_26, (int) ('u'), G__get_linked_tagnum(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities), -1, 1, 1, 1, 1, 0, "u 'darkSectorUtilities' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncdarkSector_darkAnalysisDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaldarkSector_darkAnalysisDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcdarkSector_darkAnalysisDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_darkSectorTrack = { "darkSectorTrack" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_darkSectorEvent = { "darkSectorEvent" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_darkSectorFinalState = { "darkSectorFinalState" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_darkSectorMeson = { "darkSectorMeson" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_darkSectorVB = { "darkSectorVB" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_darkSectorUtilities = { "darkSectorUtilities" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR = { "vector<TLorentzVector,allocator<TLorentzVector> >" , 99 , -1 };
G__linked_taginfo G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TLorentzVector,allocator<TLorentzVector> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabledarkSector_darkAnalysisDict() {
  G__darkSector_darkAnalysisDictLN_TClass.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TBuffer.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMemberInspector.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TObject.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TObjArray.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_darkSectorTrack.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_darkSectorEvent.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_darkSectorFinalState.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_darkSectorMeson.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_darkSectorVB.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_darkSectorUtilities.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_TLorentzVector.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR.tagnum = -1 ;
  G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabledarkSector_darkAnalysisDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_darkSectorTrack),sizeof(darkSectorTrack),-1,292608,(char*)NULL,G__setup_memvardarkSectorTrack,G__setup_memfuncdarkSectorTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_darkSectorEvent),sizeof(darkSectorEvent),-1,292608,(char*)NULL,G__setup_memvardarkSectorEvent,G__setup_memfuncdarkSectorEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_darkSectorFinalState),sizeof(darkSectorFinalState),-1,292608,(char*)NULL,G__setup_memvardarkSectorFinalState,G__setup_memfuncdarkSectorFinalState);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_darkSectorMeson),sizeof(darkSectorMeson),-1,292608,(char*)NULL,G__setup_memvardarkSectorMeson,G__setup_memfuncdarkSectorMeson);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_darkSectorVB),sizeof(darkSectorVB),-1,292608,(char*)NULL,G__setup_memvardarkSectorVB,G__setup_memfuncdarkSectorVB);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_darkSectorUtilities),sizeof(darkSectorUtilities),-1,292608,(char*)NULL,G__setup_memvardarkSectorUtilities,G__setup_memfuncdarkSectorUtilities);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_vectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgR);
   G__get_linked_tagnum_fwd(&G__darkSector_darkAnalysisDictLN_reverse_iteratorlEvectorlETLorentzVectorcOallocatorlETLorentzVectorgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupdarkSector_darkAnalysisDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupdarkSector_darkAnalysisDict()");
  G__set_cpp_environmentdarkSector_darkAnalysisDict();
  G__cpp_setup_tagtabledarkSector_darkAnalysisDict();

  G__cpp_setup_inheritancedarkSector_darkAnalysisDict();

  G__cpp_setup_typetabledarkSector_darkAnalysisDict();

  G__cpp_setup_memvardarkSector_darkAnalysisDict();

  G__cpp_setup_memfuncdarkSector_darkAnalysisDict();
  G__cpp_setup_globaldarkSector_darkAnalysisDict();
  G__cpp_setup_funcdarkSector_darkAnalysisDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncdarkSector_darkAnalysisDict();
  return;
}
class G__cpp_setup_initdarkSector_darkAnalysisDict {
  public:
    G__cpp_setup_initdarkSector_darkAnalysisDict() { G__add_setup_func("darkSector_darkAnalysisDict",(G__incsetup)(&G__cpp_setupdarkSector_darkAnalysisDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initdarkSector_darkAnalysisDict() { G__remove_setup_func("darkSector_darkAnalysisDict"); }
};
G__cpp_setup_initdarkSector_darkAnalysisDict G__cpp_setup_initializerdarkSector_darkAnalysisDict;

